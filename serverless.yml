# Serverless Config
service: api-todo
frameworkVersion: '2'

#Provider
provider:
  name: aws
  runtime: nodejs12.x
  #region: ap-southeast-2
  region: ${opt:region,'ap-southeast-2'}
  #region: ${opt:region, self:provider.region}
  lambdaHashingVersion: 20201221
  #stage: dev
  stage: ${opt:stage,'dev'}
  #stage: ${opt:stage, self:provider.region}

# Custom Variables
# custom:
#   stages:
#     - dev
#     - staging
#   currentStage: ${opt:stage, self:custom.stages}

  # Environment Variables
  environment:
    DYNAMODB_TABLE: todo-api-table

# #IAM Roles
#   iam:
#     role:
#       statements:
#         - Effect: 'Allow'
#           Action:
#           - dynamodb:Scan
#           - dynamodb:PutItem
#           Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

#Lambda
functions:
  create:
    handler: create.create
    events: 
      - http:
          path: /addItem
          method: post
    #iamRoleStatementsName: CustomRoleToPutItem #optional custom role name setting instead of the default generated one
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:PutItem        
        Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

  list:
    handler: list.list
    events: 
      - http:
          path: /list
          method: get
    #iamRoleStatementsName: CustomRoleToScanItem #optional custom role name setting instead of the default generated one
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:Scan        
        Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"      

resources:
  Resources:
    TodosDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-iam-roles-per-function